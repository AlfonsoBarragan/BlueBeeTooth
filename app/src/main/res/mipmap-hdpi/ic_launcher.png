import 'package:fl_chart/fl_chart.dart';
import 'package:flutter/material.dart';
import 'package:flutteremovi/themes/style.dart';
import 'package:material_design_icons_flutter/material_design_icons_flutter.dart';

class StepsChart extends StatefulWidget {

  final List<FlSpot> dataToPlotDaily;
  final List<FlSpot> dataToPlotWeekly;
  const StepsChart({Key key, @required this.dataToPlotDaily, @required this.dataToPlotWeekly}) : super(key: key);

  @override
  _StepsChartState createState() => _StepsChartState();
}

class _StepsChartState extends State<StepsChart> {
  List<Color> gradientColors = [
    const Color(0xff23b6e6),
    const Color(0xff02d39a),
  ];

  bool showAvg = false;

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: <Widget>[
        AspectRatio(
          aspectRatio: 1.70,
          child: Container(
            decoration: const BoxDecoration(
                borderRadius: BorderRadius.all(
                  Radius.circular(18),
                ),
                color: CustomTheme.backgroundColor),
            child: Padding(
              padding: const EdgeInsets.only(right: 18.0, left: 12.0, top: 24, bottom: 12),
              child: LineChart(
                showAvg ? avgData(widget.dataToPlotWeekly) : mainData(widget.dataToPlotDaily),
              ),
            ),
          ),
        ),
        SizedBox(
          width: 60,
          height: 34,
          child: FlatButton(
            onPressed: () {
              setState(() {
                showAvg = !showAvg;
              });
            },
            child: Icon(MdiIcons.calendarWeek, color: CustomTheme.secondaryColor),
          ),
        ),
      ],
    );
  }

  LineChartData mainData(List<FlSpot> dataToPlot) {
    return LineChartData(
      gridData: FlGridData(
        show: true,
        drawVerticalLine: true,
        getDrawingHorizontalLine: (value) {
          return FlLine(
            color: CustomTheme.primaryColorDark,
            strokeWidth: 1,
          );
        },
        getDrawingVerticalLine: (value) {
          return FlLine(
            color: CustomTheme.primaryColorDark,
            strokeWidth: 1,
          );
        },
      ),
      titlesData: FlTitlesData(
        show: true,
        bottomTitles: SideTitles(
          showTitles: true,
          reservedSize: 12,
          textStyle:
          const TextStyle(color: CustomTheme.primaryColor, fontWeight: FontWeight.bold, fontSize: 16),
          getTitles: (value) {
            switch (value.toInt()) {
              case 0:
                return '00';
              case 6:
                return '06';
              case 12:
                return '12';
              case 18:
                return '18';
              case 23:
                return '23';
            }
            return '';
          },
 